import { ParkingLotRate } from "../../../parkingLotRates";
import {
  rateTypePresent,
  validateTimeRange,
} from "./validators";

export class ParkingLotRatesClientModel extends ParkingLotRate {
  static kRateId = "rateId";
  static kRateType = "rateType";
  static kRate = "rate";
  static kDuration = "duration";
  static kCreatedAt = "createdAt";

  static fromEntity(
    parkingLotRate: ParkingLotRate
  ): ParkingLotRatesClientModel {
    return Object.assign(ParkingLotRatesClientModel.empty(), parkingLotRate);
  }

  static empty(): ParkingLotRatesClientModel {
    return new ParkingLotRatesClientModel(
      "", // rateId
      null, // rateType
      0, // rate
      0, // duration
      new Date() // createdAt
    );
  }

  private static _validate(body: any) {
    rateTypePresent(body);
    validateTimeRange(body);
  }

  static validate(body: any): ParkingLotRatesClientModel {
    this._validate(body);

    return new ParkingLotRatesClientModel(
      null, // rateId is null as it will be generated by Firestore
      body[this.kRateType],
      body[this.kRate],
      body[this.kDuration],
      null // createdAt is null as it will be generated by Firestore
    );
  }

  toBodyPublicRate(): any {
    // Convert the instance of ParkingLotRatesClientModel to a form suitable for public viewing
    return {
      [ParkingLotRatesClientModel.kRateId]: this.rateId,
      [ParkingLotRatesClientModel.kRateType]: this.rateType,
      [ParkingLotRatesClientModel.kRate]: this.rate,
      [ParkingLotRatesClientModel.kDuration]: this.duration,
    };
  }

  toBodyFullParkingRate(): any {
    // Extend public representation with additional details suitable for public viewing
    return {
      ...this.toBodyPublicRate(),
      [ParkingLotRatesClientModel.kCreatedAt]: this.createdAt,
    };
  }
}
